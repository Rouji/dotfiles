focus_follows_mouse no

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Source Sans Pro 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty msg create-window || alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start program launcher
bindsym $mod+d exec wofi --show run

# open new browser window
bindsym $mod+q exec firefox

bindsym Print exec screenshot
bindsym $mod+Print exec screenshotupload

# shorten URL in clipboard
bindsym $mod+u exec curl -F "url=$(wl-paste -n)" https://s.x0.at/ | wl-copy && notify-send 'url shortened' "$(wl-paste)"

# pause/resume process of active window
bindsym $mod+Shift+p exec "kill -STOP $(active_window_pid)"
bindsym $mod+p exec "kill -CONT $(active_window_pid)"
# KILL process of active window
bindsym $mod+Shift+z exec "kill -KILL $(active_window_pid)"

set $left h
set $up k
set $down j
set $right l

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# toggle focused window sticky
bindsym $mod+s sticky toggle

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# reload the configuration file
bindsym $mod+Shift+r reload
# exit
bindsym $mod+Shift+e exec "swaynag -t warning -m 'log out?' -b 'Yes' 'swaymsg exit'"

# lock screen
bindsym --release Control+$mod+l exec "swaylock -f -k -c 000000; sleep 1; killall -USR1 swayidle"

# multimedia keys
bindsym XF86AudioRaiseVolume exec pamixer --allow-boost -ui 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
bindsym XF86AudioLowerVolume exec pamixer --allow-boost -ud 2 && dc -e "[`pamixer --get-volume`]sM 100d `pamixer --get-volume`<Mp" > $SWAYSOCK.wob
bindsym XF86AudioMute exec pamixer --toggle-mute && ( pamixer --get-mute && echo 0 > $SWAYSOCK.wob )

bindsym XF86MonBrightnessUp exec brightnessctl -q set +1% && ( echo $((`brightnessctl get` * 100 / `brightnessctl m`)) > $SWAYSOCK.wob )
bindsym XF86MonBrightnessDown exec brightnessctl -q set 1%- && ( echo $((`brightnessctl get` * 100 / `brightnessctl m`)) > $SWAYSOCK.wob )

bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# pass through all input
mode "passthrough" {
    bindsym $mod+t mode "default"
}
bindsym $mod+t mode "passthrough"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left resize shrink width 40 px or 10 ppt
        bindsym $down resize grow height 40 px or 10 ppt
        bindsym $up resize shrink height 40 px or 10 ppt
        bindsym $right resize grow width 40 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# shutdown mode
mode  "(s)leep (h)ibernate (r)estart shut(d)own" {

        bindsym s exec swaylock -c 000000 --indicator-idle-visible; exec systemctl suspend; mode "default"
        bindsym h exec swaylock -c 000000 --indicator-idle-visible; exec systemctl hibernate; mode "default"
        bindsym d exec systemctl poweroff; mode "default"
        bindsym r exec systemctl reboot; mode "default"

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+n mode "(s)leep (h)ibernate (r)estart shut(d)own"

# resize mode
bindsym $mod+r mode "resize"


# window colors
#                       border background text indicator
client.focused          #73BA25 #73BA25 #000000 #73BA25 #73BA25
#client.unfocused        #555555 #000000 #ffffff #000000 #000000
#client.focused_inactive #555555 #222222 #ffffff #000000 #000000
#client.urgent           $col_indicate $col_indicate $col_font #ffffff

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    swaybar_command waybar
}

# open notification panel
bindsym $mod+Shift+n exec swaync-client -t -sw

#disable titlebars
for_window [class="^.*"] pixel 2
default_border pixel 2
default_floating_border pixel 2
smart_borders on

floating_minimum_size 1 x 1

for_window [title='ssh-askpass'] floating enable

input type:keyboard {
    xkb_options compose:ralt
    repeat_delay 200
    repeat_rate 50
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
    scroll_factor 0.3
}

input "43256:6194:Bastard_Keyboards_Charybdis_Nano_(3x5)_Splinky_Mouse" {
    natural_scroll enabled
    middle_emulation enabled
    scroll_button 275
    scroll_method on_button_down
    accel_profile flat
    pointer_accel -0.7
    scroll_factor 0.3
}


exec_always {
    systemctl --user import-environment
    test -e $SWAYSOCK.wob || mkfifo $SWAYSOCK.wob
    tail -f $SWAYSOCK.wob | wob
}

exec fcitx5
exec swaync
exec swayidle -w \
        timeout 300 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"' \
        timeout 360 'swaylock -f -c 000000 --indicator-idle-visible' \
        before-sleep 'swaylock -f -c 000000 --indicator-idle-visible'

include config.d/*
